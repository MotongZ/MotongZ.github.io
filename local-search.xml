<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>我的第一个flask项目：部署和碰到的一些问题</title>
    <link href="/2023/05/23/flaskenv/"/>
    <url>/2023/05/23/flaskenv/</url>
    
    <content type="html"><![CDATA[<p><a href="http://motongz.pythonanywhere.com/">项目指引</a><del>即日起30天内有效</del>  </p><h1 id="Summary"><a href="#Summary" class="headerlink" title="Summary"></a>Summary</h1><p>花了大约一周时间，跟着李辉老师的教程学习了flask项目，学习了一些基础的框架架构。项目详情请见<br><a href="https://github.com/helloflask/flask-tutorial">https://github.com/helloflask/flask-tutorial</a>，理性的说，这是个很不错而且全面的项目。<br>项目学习过程中遇到了很多问题，显而易见的，这都是我python基础孱弱，并且毫无综合项目经验的缘故。<br>本文欲简单介绍一下项目过程中碰到的一些问题和解决，还有一些小小的随想罢了。</p><h1 id="Knowledge"><a href="#Knowledge" class="headerlink" title="Knowledge"></a>Knowledge</h1><p>Flask：一个轻量级框架，不同于Django，Flask主打的就是一个简单轻便，无需下载过多的包和依赖，<br>自定义添加很方便，轻量级的含金量。<br>SQLAlchemy：网上给出的定义是一个强大的ORM包。基本不需要安装和依赖，import完后本地创一个.db嗯造就行了，在使用过程中也以db.session.operation为主。<br>本次项目几乎没用到太多这里的扩展，只是用一些基础功能，crud之类的。所以这个玩意的认知还是有限，以后有机会可以学习更多。<br>装饰器：python中的一个很有意思的特性，简单来说就是在不想改变内部代码的情况下给他附赠一些功能，让他执行时可以执行更多。语法糖为@标识，标准格式如下：  </p><pre><code class="hljs">def 装饰器(func):    def wrapfunction():        pass..    return warpfunction@装饰器def func(parameter a):    pass...     </code></pre><p>上面首先定义装饰器函数，装饰器函数传进去函数作为参数（python特性导致它可以将函数作为参数，变量等，生猛的一），举一个简单的例子：  </p><pre><code class="hljs">def func():    passa=funa()#此时a()等同于执行func()</code></pre><p>所以，装饰器传一个函数是正常操作。然后最后在这个大的函数下return内部wrap方法即可。这样的效果就是，你原本的func没有改动，但是有额外执行了一些warp中的方法。<br>这就是装饰器的特性，在本例中，大量使用了@app.route这一方法用来指引url，这是很重要的。<br>Jinjia2：Jinjia2相关语法见<a href="https://docs.jinkan.org/docs/jinja2/">Jinjia2</a><del>为什么我要用官方的链接呢？因为我感觉这博客是基于此写的，我原本写了一些语法<br>但是在生成hexo时报错了！报错了。。。告诉我缺失tag…..</del></p><pre><code class="hljs">#一个例子:base.html&#123;%block head%&#125;    pass...    &#123;%end block%&#125;    \\\\\\\    #下面是一个待插入模块    &#123;%bolck content%&#125;    &#123;%endblock%&#125;\\\\\#继承网站:extend.html&#123;%extends 'base.html'%&#125;#继承base.html。同时还会继承页脚footer部分pass...&#123;%block content%&#125;    pass..你自己的语句，它会自动给插进去    &#123;%endblock%&#125;</code></pre><p>大概是这样的原理。</p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><p>困难主要在于工程能力比较烂，很多东西构造和搭建总是遇见不懂得东西。还好有chatgpt保我小命，很多问题直接问gpt都可以得到相当令人满意的回答。<br>整个流程大致就是看文档&amp;源码—自己稍稍改一改—最后deploy的过程，然而最后还是完全按照源代码来了，因为部署项目的部分我完全不明白<br>，从来没有部署过一个项目到互联网上，这次也算开了荒吧。通过<a href="https://www.pythonanywhere.com/">pythonanywhere</a>来部署的python项目，他会给每个人提供1G的虚拟空间供你部署源代码<br>还有必要的静态文件。只要你创建一个web project就会给你提供一个基于pythonanywhere域名的一个url供你的代码来跑，上传完所有需要的资源后<br>，配置好所需的虚拟环境后刷新一下就可以开跑了。后端一些操作管理一般都是通过平台提供的bash命令交互来实现（如这个例子里的initdb、admin等操作都是通过bash来的）<br>由于我完全参照的教程，所以我还按照教程的需求进行代码管理和一定量的重构，原本统统集合在一个app.py下跑，后面根据具体操作不同把他们都分散<br>到了不同逻辑的.py下。简短的一个项目包含了很多，从框架的教程，再到用到的一些语法，项目管理，项目部署，一些资源的利用收集，都让我感觉到了具体而切实的进步<br>，这些东西应该是一个科班出身的学生必不可少的，但我却不具备那样的素养，只能为过去消逝的时光感到遗憾了。    </p><h1 id="最后…"><a href="#最后…" class="headerlink" title="最后…"></a>最后…</h1><p>这是我第一篇博客记录，如你所见写的很烂，没有思路的苍蝇一般想到什么写什么，完全不具备那种从业人员该具备的严谨和强结构性。所以如果这篇文章让你觉得<br>很烂，请别喷我，关掉就是了。希望我以后能记录一些更好的project和更有意义的（贴近现实）的技术和项目。IT精神不仅仅是开源，还应该是一种坚持不懈学习的精神，<br>不应该因为时代在发展变化就拒绝变化，不适应新时代潮流的人只能留在旧时代顾影自怜吧。</p>]]></content>
    
    
    
    <tags>
      
      <tag>tec</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>internship_thought</title>
    <link href="/2023/03/18/internship-thought/"/>
    <url>/2023/03/18/internship-thought/</url>
    
    <content type="html"><![CDATA[<hr><p>第一次实习结束了，从2023-2-7到2023-3-17，这一个月经历了太多事情，给我简单的人生带来了许多的变数。经历了一个月的社会实践，我大概是明白了很多道理，同时我也应该学着反思自己的行为了。就像开篇博客所说，年轻也是有相对论的。<br>选择大于努力这句b话还真不是盖的，考司马软院311点击就送，司马计院342直接寄。当然我考的确实垃圾也是事实，408真没学透，还没一些跨考仔来的高，也是让人无言以对。<br>这段时间我一直在想为什么会出路以及以后的方向到底该怎么样？我认为可能是我从来没有直接承担过责任，同时我也确实有点圣母了。众所周知人生而不平等，家境，环境，甚至遗传。没有什么是平等的，讲道理如果人都是一个模子刻出来的也不用讲什么差异性了，大伙都一个B样还讲啥？两次考研以及现在一段社会经验至少给了我狠狠一记重拳。或许早些年我还一直吐槽没发挥好，当然是我不努力还有相当重的心理包袱了。现在如果真心意识到了这些，不管去什么地方读研，不管用什么手段达成研，我都应该认认真真反思反思自己，认认真真好好考虑将来的出路，不管是为了噱头的虚无缥缈的“phd”还是切切实实的以后就业问题。都要担负起责任来了。<br>社会不由人，学生还是这个世界上最轻松的职业呀。</p><!-- flag of hidden posts -->]]></content>
    
    
    
    <tags>
      
      <tag>不光彩的事实</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>创建之初</title>
    <link href="/2023/03/09/%E5%88%9B%E5%BB%BA%E4%B9%8B%E5%88%9D/"/>
    <url>/2023/03/09/%E5%88%9B%E5%BB%BA%E4%B9%8B%E5%88%9D/</url>
    
    <content type="html"><![CDATA[<p>今天是我第一次写github.io的博客，第一次发布，随便扯点什么吧。<br>如今我已不再年少——虽然去参加一些父辈一些人的聚会他们会告诉我，你还年轻，你的未来无可限量什么什么的，当然我心里深知我想对于他们是年轻的，客观事实就摆在那里不是？但是我又是衰老的，我的青春年华或主观、或客观的已经挥霍了数年时间。人们总会说浪子回头等等激励人心的语句，但是客观事实就是客观事实。<br>大学时光匆匆过去，我却未曾有建树：既无掌握扎实深厚的基础、也无学习广泛的应用开发工具。大三说要开始考研，然则既有心高气傲之眼界，又存能力不足之客观。两次的考研尝试均以失败告终，最终轮到这样一般尴尬的境地，上不去而下不来——卡在这儿了。最近发生的许多事情也不断冲击我的三观，或许至始至终我都是一个比较可悲的浪漫主义者——所谓想得美就是。以前没有考虑过人生往后怎么行动，突然一下面临人生抉择和考验、自然是打个措手不及呗。<br>然则从客观上来看，我并不是完全的死路一条。家境虽不可称富贵，却也可算得上坚强的后盾；我自身仍具备一些天生的优势，我仍然身处一个较好的地域，等等等等。人总要做出些改变，不应惶惶不可终日，总是活在过去的苦恼和自怨自艾中，有时候心里实在不愿接受这样的现实欲寻逃避之法，却终有梦醒之时。我是矛盾的，身边总不乏榜样和鼓舞，哪怕身边真的没有，网上的鼓舞例子也少不了呢？客观的说，我是只想着摘桃子，不想着种桃子罢了。所以当务之急是真正沉下心来，客观理智的面对既存事实。再努力去改变。努力地晚永远没有努力的早来的高效快捷，但总该好过不努力而饱食终日吧？<br>博客是作为记录，无论是成长经历还是技术总结，一面是警示自己，一面是激励来人。我曾害怕在众人面前展示自我（我怀疑现在我能不能称得上乐意），高数课的场景偶尔回想仍历历在目。若我的博客被他人看到，希望你看了我讲的一些话能给你一点震动。谢谢看到这句话的人，不管是谁。</p><!-- flag of hidden posts -->]]></content>
    
    
    
    <tags>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
